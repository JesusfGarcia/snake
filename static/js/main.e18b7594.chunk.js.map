{"version":3,"sources":["utils/foodColition.js","utils/maguito.png","components/Canvas.jsx","utils/borderColition.js","utils/bodyColition.js","App.js","reportWebVitals.js","index.js"],"names":["foodColition","body","coords","itsOk","i","length","piece","top","left","initialState","head","direction","Canvas","React","snake","setSnake","food","setFood","isPlaying","setIsPlaying","score","setScore","message","setMessage","position","setPosition","diapos","className","onClick","newCoordinate","newCoords","Math","floor","random","interval","setTimeout","newHead","newBody","oldHeadCoords","map","item","idx","unshift","newSnake","headLeft","headTop","borderColition","isColition","actualBody","bodyColition","clearInterval","touchMove","key","tabIndex","onKeyDown","e","preventDefault","style","width","height","src","manguito","display","flexDirection","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e18b7594.chunk.js","sourcesContent":["export const foodColition = (body, coords) => {\n  let itsOk = false;\n  for (let i = 0; i < body.length; i++) {\n    const piece = body[i];\n    if (coords.top === piece.top && coords.left === piece.left) {\n      itsOk = true;\n      break;\n    }\n  }\n  return itsOk;\n};\n","export default __webpack_public_path__ + \"static/media/maguito.e9ac595d.png\";","import * as React from \"react\";\nimport { borderColition } from \"../utils/borderColition\";\nimport { bodyColition } from \"../utils/bodyColition\";\nimport { foodColition } from \"../utils/foodColition\";\n\nimport manguito from \"../utils/maguito.png\";\n\nconst squareLong = 5;\nconst refreshTime = 200;\nconst initialState = {\n  head: { top: 0, left: 10, direction: \"right\" },\n  body: [\n    { top: 0, left: 0 },\n    { top: 0, left: squareLong },\n  ],\n};\n\nexport default function Canvas() {\n  const [snake, setSnake] = React.useState(initialState);\n  const [food, setFood] = React.useState({ top: 30, left: 50 });\n  const [isPlaying, setIsPlaying] = React.useState(false);\n  const [score, setScore] = React.useState(0);\n  const [message, setMessage] = React.useState(false);\n\n  const [position, setPosition] = React.useState(0);\n\n  const diapos = [\n    <div className=\"proposition\">\n      <p>Felicidades por llegar a los 22 pts! un muy buen número,</p>\n      <p>\n        Buenodespues de tanto pensar y pensar como hacer esto, me pareció\n        bonito hacerlo con lo que más me gusta hacer...\n      </p>\n      <p>programar y pasar tiempo contigo amor</p>\n      <p>\n        sin mas preambulos da click en la palabra{\" \"}\n        <span onClick={() => setPosition(1)}>continuar </span>\n        si quieres saber lo que te tengo que decir :)\n      </p>\n    </div>,\n    <div className=\"proposition\">\n      <p>¿Me harías el favor de ser mi novia?</p>\n      <div className='button'>\n        <span onClick={() => setPosition(2)}>Si, mi pollito</span>\n      </div>\n      <div className='button'>\n        <span onClick={() => setPosition(3)}>No, soy un anfibio idiota</span>\n      </div>\n    </div>,\n    <div className=\"start-title\">\n      Soy el hombre más feliz contigo amor, yo también quiero ser tu novio *-*\n    </div>,\n    <div className=\"start-title\">jajajja un anfibio idiota :C</div>,\n  ];\n\n  const newCoordinate = () => {\n    let newCoords;\n    do {\n      newCoords = {\n        top: Math.floor(Math.random() * (20 - 0)) * squareLong,\n        left: Math.floor(Math.random() * (20 - 0)) * squareLong,\n      };\n    } while (foodColition(snake.body, newCoords));\n    return newCoords;\n  };\n\n  const win = () => {\n    if (score === 22) {\n      setMessage(true);\n      setIsPlaying(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (isPlaying) {\n      const interval = setTimeout(() => {\n        let newHead;\n        let newBody;\n        const oldHeadCoords = {\n          top: snake.head.top,\n          left: snake.head.left,\n        };\n        switch (snake.head.direction) {\n          case \"right\":\n            newHead = {\n              ...snake.head,\n              left: snake.head.left + squareLong,\n            };\n            break;\n          case \"top\":\n            newHead = {\n              ...snake.head,\n              top: snake.head.top - squareLong,\n            };\n            break;\n          case \"bot\":\n            newHead = {\n              ...snake.head,\n              top: snake.head.top + squareLong,\n            };\n            break;\n          case \"left\":\n            newHead = {\n              ...snake.head,\n              left: snake.head.left - squareLong,\n            };\n          default:\n            break;\n        }\n\n        newBody = snake.body.map((item, idx) => {\n          if (idx === snake.body.length - 1) {\n            return oldHeadCoords;\n          } else {\n            return snake.body[idx + 1];\n          }\n        });\n\n        if (newHead.top === food.top && newHead.left === food.left) {\n          newBody.unshift(snake.body[0]);\n          setFood(newCoordinate);\n          setScore(score + 1);\n        }\n\n        const newSnake = {\n          head: newHead,\n          body: newBody,\n        };\n\n        if (borderColition(newHead) || bodyColition(newHead, newBody)) {\n          setSnake(initialState);\n          setIsPlaying(false);\n        } else {\n          setSnake(newSnake);\n        }\n      }, refreshTime);\n\n      return () => clearInterval(interval);\n    }\n  }, [snake, isPlaying]);\n\n  React.useEffect(() => {\n    win();\n  }, [score]);\n\n  const move = (e) => {\n    e.preventDefault();\n    const key = e.key;\n    switch (key) {\n      case \"w\":\n        setSnake({\n          ...snake,\n          head: {\n            ...snake.head,\n            direction: \"top\",\n          },\n        });\n        break;\n      case \"a\":\n        setSnake({\n          ...snake,\n          head: {\n            ...snake.head,\n            direction: \"left\",\n          },\n        });\n        break;\n      case \"s\":\n        setSnake({\n          ...snake,\n          head: {\n            ...snake.head,\n            direction: \"bot\",\n          },\n        });\n        break;\n      case \"d\":\n        setSnake({\n          ...snake,\n          head: {\n            ...snake.head,\n            direction: \"right\",\n          },\n        });\n      default:\n        break;\n    }\n  };\n\n  const touchMove = (key) => {\n    switch (key) {\n      case \"w\":\n        setSnake({\n          ...snake,\n          head: {\n            ...snake.head,\n            direction: \"top\",\n          },\n        });\n        break;\n      case \"a\":\n        setSnake({\n          ...snake,\n          head: {\n            ...snake.head,\n            direction: \"left\",\n          },\n        });\n        break;\n      case \"s\":\n        setSnake({\n          ...snake,\n          head: {\n            ...snake.head,\n            direction: \"bot\",\n          },\n        });\n        break;\n      case \"d\":\n        setSnake({\n          ...snake,\n          head: {\n            ...snake.head,\n            direction: \"right\",\n          },\n        });\n      default:\n        break;\n    }\n  };\n\n  const startNewGame = () => {\n    setIsPlaying(true);\n    setScore(0);\n  };\n\n  return (\n    <div tabIndex=\"0\" onKeyDown={move} className=\"container\">\n      <div className=\"score\">\n        <span>score: </span>\n        <span>{score}</span>\n      </div>\n      <div className=\"tablero\">\n        {isPlaying ? (\n          <>\n            <div\n              className=\"cuadrito\"\n              style={{\n                top: `${snake.head.top}%`,\n                left: `${snake.head.left}%`,\n                width: `${squareLong}%`,\n                height: `${squareLong}%`,\n              }}\n            ></div>\n            {snake.body.map((item, idx) => {\n              return (\n                <div\n                  key={idx}\n                  className=\"cuadrito\"\n                  style={{\n                    top: `${item.top}%`,\n                    left: `${item.left}%`,\n                    width: `${squareLong}%`,\n                    height: `${squareLong}%`,\n                  }}\n                ></div>\n              );\n            })}\n            <img\n              className=\"food\"\n              src={manguito}\n              style={{\n                top: `${food.top}%`,\n                left: `${food.left}%`,\n                width: `${squareLong}%`,\n                height: `${squareLong}%`,\n              }}\n            />\n          </>\n        ) : message ? (\n          <>{diapos[position]}</>\n        ) : (\n          <div className=\"start-title\" onClick={startNewGame}>\n            start\n          </div>\n        )}\n      </div>\n      <div className=\"controls\">\n        <div onClick={() => touchMove(\"w\")} className=\"vertical\">\n          ↑\n        </div>\n        <div style={{ display: \"flex\", flexDirection: \"row\", width: \"100%\" }}>\n          <div onClick={() => touchMove(\"a\")}>←</div>\n          <div onClick={() => touchMove(\"d\")}>→</div>\n        </div>\n\n        <div onClick={() => touchMove(\"s\")} className=\"vertical\">\n          ↓\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const borderColition = (snake) => {\n  const headLeft = snake.left;\n  const headTop = snake.top;\n  if (headLeft >= 100 || headLeft < 0 || headTop >= 100 || headTop < 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\n","export const bodyColition = (head, body) => {\n  let isColition = false;\n\n  for (let i = 0; i < body.length; i++) {\n    let actualBody = body[i];\n    if (head.top === actualBody.top && head.left === actualBody.left) {\n      isColition = true;\n      break;\n    }\n  }\n  return isColition;\n};\n","import \"./App.css\";\nimport Snake from \"./components/Canvas\";\nfunction App() {\n  return <Snake />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}